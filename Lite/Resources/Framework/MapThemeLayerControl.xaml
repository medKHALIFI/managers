<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
                    xmlns:sfc="http://schemas.spatialeye.com/clienttoolkit" 
                    xmlns:sf="http://schemas.spatialeye.com/framework" 
                    xmlns:local="clr-namespace:Lite" 
                    >

  <Style x:Key="ThemeLayerModeListItemStyle" TargetType="ListBoxItem">
    <Setter Property="Background" Value="{StaticResource ListBoxItem.Background}" />
    <Setter Property="BorderBrush" Value="{StaticResource ListBoxItem.BorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ListBoxItem.Foreground}" />
    <Setter Property="Padding" Value="3" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBoxItem">
          <Grid x:Name="Root" Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ListBoxItemHoverSelection" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" Duration="0" To="0.35" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ListBoxItemSelection" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                    <ColorAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Duration="0" To="White"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="ListBoxItemHoverSelection" Background="{StaticResource Lite.Brush.Background.Dark}" Opacity="0" />
            <Border x:Name="ListBoxItemSelection" Background="{StaticResource Lite.Brush.Background.Dark}" Opacity="0" />
            <Border x:Name="ListBoxInactiveSelection" Background="{StaticResource ListBoxItem.InactiveSelection.Border}" Opacity="0" />
            <ContentControl x:Name="content" Foreground="{TemplateBinding Foreground}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <Style x:Key="ThemeLayerLegendListItemStyle" TargetType="ListBoxItem">
    <Setter Property="Background" Value="{StaticResource ListBoxItem.Background}" />
    <Setter Property="BorderBrush" Value="{StaticResource ListBoxItem.BorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ListBoxItem.Foreground}" />
    <Setter Property="Padding" Value="3" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBoxItem">
          <Grid x:Name="Root" Background="White" >
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" Duration="0" To="0.35" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="ListBoxItemHoverSelection" Background="{StaticResource Lite.Brush.Background.Dark}" Opacity="0" />
            <Border x:Name="ListBoxItemSelection" Background="{StaticResource Lite.Brush.Background.Dark}" Opacity="0" />
            <Border x:Name="ListBoxInactiveSelection" Background="{StaticResource ListBoxItem.InactiveSelection.Border}" Opacity="0" />
            <ContentControl x:Name="content" Background="White" Foreground="{TemplateBinding Foreground}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="sfc:MapThemeLayerControl">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="sfc:MapThemeLayerControl">
          <Grid Margin="4">
            <Grid.Resources>

              <DataTemplate DataType="sfc:MapLayerPredicateStyle">
                <Grid Margin="0,4,0,0">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>
                  <Grid Visibility="{Binding HeaderVisibility}">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <CheckBox IsChecked="{Binding StyleIsOn, Mode=TwoWay}" Visibility="{Binding StyleOnOffCheckVisibility}" Margin="3,0,3,0" HorizontalAlignment="Center"/>
                    <RadioButton IsChecked="{Binding StyleIsOn, Mode=TwoWay}" Visibility="{Binding StyleOnOffRadioVisibility}" Margin="3,0,3,0" HorizontalAlignment="Center"/>
                    <ContentPresenter Content="{Binding Style.PreviewControl16, Mode=OneTime}" VerticalAlignment="Center" Width="20" Margin="1,0,8,0" HorizontalAlignment="Center" Grid.Column="1" Visibility="{Binding StyleVisibility}"/>
                    <sdk:Label Content="{Binding ExternalName}" Foreground="White" Grid.Column="2"/>
                  </Grid>
                  <ItemsControl ItemsSource="{Binding Children}" Grid.Row="1" Margin="{Binding ChildrenMargin}"/>
                </Grid>
              </DataTemplate>

              <DataTemplate DataType="sfc:MapLayerSliceStyle">
                <Grid Margin="0,4,0,0">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>
                  <Grid Visibility="{Binding HeaderVisibility}">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <CheckBox IsChecked="{Binding StyleIsOn, Mode=TwoWay}" Visibility="{Binding StyleOnOffCheckVisibility}" Margin="3,0,3,0" HorizontalAlignment="Center"/>
                    <RadioButton IsChecked="{Binding StyleIsOn, Mode=TwoWay}" Visibility="{Binding StyleOnOffRadioVisibility}" Margin="3,0,3,0" HorizontalAlignment="Center"/>
                    <ContentPresenter Content="{Binding Style.PreviewControl16, Mode=OneTime}" VerticalAlignment="Center" Width="20" Margin="1,0,8,0" HorizontalAlignment="Center" Grid.Column="1" Visibility="{Binding StyleVisibility}"/>
                    <sdk:Label Content="{Binding ExternalName}" Foreground="White" Grid.Column="2"/>
                  </Grid>
                  <ItemsControl ItemsSource="{Binding Children}" Grid.Row="1" Margin="{Binding ChildrenMargin}"/>
                </Grid>
              </DataTemplate>

              <DataTemplate DataType="sfc:MapLayerStyleGroup">
                <Grid Margin="0,4,0,0">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>
                  <Grid Visibility="{Binding HeaderVisibility}">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <CheckBox IsChecked="{Binding StyleIsOn, Mode=TwoWay}" Visibility="{Binding StyleOnOffCheckVisibility}" Margin="3,0,3,0" HorizontalAlignment="Center"/>
                    <RadioButton IsChecked="{Binding StyleIsOn, Mode=TwoWay}" Visibility="{Binding StyleOnOffRadioVisibility}" Margin="3,0,3,0" HorizontalAlignment="Center"/>
                    <sdk:Label Content="{Binding ExternalName}" Foreground="White" Grid.Column="1"/>
                  </Grid>
                  <ItemsControl ItemsSource="{Binding Children}" Grid.Row="1" Margin="{Binding ChildrenMargin}"/>
                </Grid>
              </DataTemplate>

              <DataTemplate DataType="sfc:MapLayerStyle">
                <Grid Margin="0,4,0,0">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                  </Grid.RowDefinitions>
                  <CheckBox IsChecked="{Binding StyleIsOn, Mode=TwoWay}" Visibility="{Binding StyleOnOffCheckVisibility}" Margin="3,0,3,0" HorizontalAlignment="Center"/>
                  <RadioButton IsChecked="{Binding StyleIsOn, Mode=TwoWay}" Visibility="{Binding StyleOnOffRadioVisibility}" Margin="3,0,3,0" HorizontalAlignment="Center"/>
                  <ContentPresenter Content="{Binding Style.PreviewControl16, Mode=OneTime}" VerticalAlignment="Center" Width="20" Margin="1,0,8,0" HorizontalAlignment="Center" Grid.Column="1"/>
                  <sdk:Label Content="{Binding ExternalName}"  Foreground="White"  VerticalAlignment="Center" Grid.Column="2"/>
                </Grid>
              </DataTemplate>

              <DataTemplate DataType="sf:MapLayerDefinitionMode">
                <Border BorderThickness="0" Padding="4,2" >
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Image HorizontalAlignment="Center" VerticalAlignment="Center" Source="{Binding Images.Image32}" Grid.Column="0" Grid.RowSpan="2"/>
                    <sdk:Label Margin="4,0,0,0" Content="{Binding Name}" Grid.Column="1" Grid.Row="0" Foreground="White"/>
                    <sdk:Label Margin="4,0,0,0" Content="{Binding Description}" Grid.Column="1" Grid.Row="1" FontSize="10" FontStyle="Italic" Foreground="White"/>
                  </Grid>
                </Border>
              </DataTemplate>

              <DataTemplate DataType="sfc:MapThemeLayerModeElementViewModel">
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>
                  <sdk:Label Content="{Binding Resources.ThemesLayerMode}"  Margin="0,10,0,0" Foreground="White" Grid.Row="0"/>
                  <ListBox Margin="10,10,10,10" ItemContainerStyle="{StaticResource ThemeLayerModeListItemStyle}" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden" ItemsSource="{Binding MapLayer.Modes}" SelectedItem="{Binding MapLayer.SelectedMode, Mode=TwoWay}" Background="{x:Null}" BorderThickness="0" Grid.Row="1"/>
                </Grid>
              </DataTemplate>

              <DataTemplate DataType="sfc:MapThemeLayerLegendViewModel">
                <Grid>
                  <sdk:TreeView ItemsSource="{Binding Legend.Items}" Style="{StaticResource SimpleTreeView}" ItemContainerStyle="{StaticResource SimpleTreeViewItem}" 
                                ScrollViewer.HorizontalScrollBarVisibility="Hidden" 
                                ScrollViewer.VerticalScrollBarVisibility="Auto"  
                                Margin="0,10" MaxHeight="600">
                    <sdk:TreeView.ItemTemplate>
                      <sdk:HierarchicalDataTemplate ItemsSource="{Binding Path=Items}">
                        <Grid>
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                          </Grid.ColumnDefinitions>
                          <Image Source="{Binding StylePreviewImage}" Grid.Column="0"  Visibility="{Binding HasStylePreviewImage}" Margin="0,0,3,0"/>
                          <sdk:Label Content="{Binding Description, FallbackValue=legenditem}" Grid.Column="1" FontStyle="{Binding FontStyle}" Margin="0" FontWeight="{Binding FontWeight}" Foreground="White"/>
                        </Grid>
                      </sdk:HierarchicalDataTemplate>
                    </sdk:TreeView.ItemTemplate>
                  </sdk:TreeView>
                </Grid>
              </DataTemplate>

              <DataTemplate DataType="sfc:MapThemeLayerStyleElementViewModel">
                <Grid Margin="0,3,0,3">
                  <ContentControl Content="{Binding MapLayer.Style}"/>
                </Grid>
              </DataTemplate>

              <DataTemplate DataType="sfc:MapThemeLayerParameterElementViewModel">
                <Grid Margin="0,3,0,3">
                  <sfc:ParameterValuesPropertyGrid DataContext="{Binding MapLayer.Parameters}" Foreground="{StaticResource Lite.Brush.Text.Light}"/>
                </Grid>
              </DataTemplate>

              <DataTemplate DataType="local:LiteMapThemeLayerFeatureGeometryElement">
                <Grid Margin="0,5,0,0">
                  <sdk:Label Content="{Binding Description}" Foreground="{StaticResource Lite.Brush.Text.Light}"/>
                </Grid>
              </DataTemplate>

            </Grid.Resources>
            <Border x:Name="ThemeHeader" BorderBrush="{StaticResource MapThemesControl.BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="36"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="*"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <CheckBox x:Name="ExpandCollapseCheckBox" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" Width="16" Margin="8,0,0,0" Style="{StaticResource ExpandCollapseCheckBoxStyle}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                <sdk:Label HorizontalAlignment="Left" Margin="6,0,0,0" Content="{Binding MapLayer.ExternalName, FallbackValue=Layer}" VerticalAlignment="Center" Grid.Column="1" Foreground="White" />
                <Ellipse Visibility="{Binding MapLayer.ErrorVisibility}" Grid.Column="2" HorizontalAlignment="Right" Margin="0,0,4,0" VerticalAlignment="Center" Width="6" Height="6" Fill="#AAFF0000" ToolTipService.ToolTip="{Binding MapLayer.ErrorMessage}"/>
                <Ellipse Visibility="{Binding MapLayer.BusyVisibility}" Grid.Column="3" HorizontalAlignment="Right" Margin="0,0,6,0" VerticalAlignment="Center" Width="6" Height="6" Fill="#33CBC9EA"/>
                <CheckBox IsChecked="{Binding MapLayer.IsOn, Mode=TwoWay}" Grid.Column="4" Margin="0,0,10,0" Style="{StaticResource MetroCheckBoxStyleOnOffSwitch}"/>

                <Border x:Name="MenuControl" BorderBrush="Black" BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Top" Grid.Row="3" Height="36" Grid.ColumnSpan="5" Background="{StaticResource MapThemesControl.Layer.MenuBackground}">
                  <Grid Height="36">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Slider Width="100" Minimum="0" Margin="33,0,0,0" Maximum="100" Grid.Column="1" Height="14" Value="{Binding MapLayer.Opacity, Mode=TwoWay}" HorizontalAlignment="Left" Style="{StaticResource LiteSliderStyle}"/>
                    <Button Visibility="{Binding RemoveVisibility}" Command="{Binding RemoveCommand}" Grid.Column="2" Height="24" HorizontalAlignment="Right" VerticalAlignment="Center" Width="24" Margin="0,0,10,0" Style="{StaticResource MetroButtonStyleLight}" ToolTipService.ToolTip="{Binding Resources.ThemesRemoveLayer}" Content="{StaticResource MetroIcon.Content.Delete}"/>
                  </Grid>
                </Border>
                <Border x:Name="ElementControl"  BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Top" Grid.Row="2" Grid.ColumnSpan="5" Background="{StaticResource MapThemesControl.Layer.ElementBackground}">
                  <Grid  Margin="30,0,33,0">
                    <ItemsControl ItemsSource="{Binding ThemeLayerElements}"/>
                  </Grid>
                </Border>
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>