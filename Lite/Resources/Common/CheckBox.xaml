<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:core="http://schemas.devexpress.com/winfx/2008/xaml/core" 
                    xmlns:sys="clr-namespace:System;assembly=mscorlib" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" >

  <Style TargetType="CheckBox">
    <!--<Setter Property="core:BackgroundPanel.PatchForeground" Value="True" />-->
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="4,0,0,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="CheckBox">
          <Grid x:Name="Root" Background="Transparent" >
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PressedState" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" Duration="0" To="0.5" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked" />
                <VisualState x:Name="Indeterminate">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateState" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="FocusState" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid" />
                <VisualState x:Name="InvalidUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="InvalidFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="ValidationTooltip">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <sys:Boolean>True</sys:Boolean>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Grid Width="14" Height="14" Grid.Column="0" Grid.ColumnSpan="1">
                <Grid x:Name="DefaultState">
                  <Border Background="{StaticResource CheckBox.DefaultState.Border1}" Padding="1">
                    <Border Background="{StaticResource CheckBox.DefaultState.Border2}" />
                  </Border>
                </Grid>
                <Grid x:Name="HoverState" Opacity="0">
                  <Border Background="{StaticResource CheckBox.HoverState.Border1}" Padding="1">
                    <Border Background="{StaticResource CheckBox.HoverState.Border2}" />
                  </Border>
                </Grid>
                <Grid x:Name="FocusState" Opacity="0">
                  <Border Style="{StaticResource FocusTemplate}" />
                </Grid>
                <Grid x:Name="PressedState" Opacity="0">
                  <Border Background="{StaticResource CheckBox.PressedState.Border1}" Padding="1">
                    <Border Background="{StaticResource CheckBox.PressedState.Border2}" />
                  </Border>
                </Grid>
                <ContentControl x:Name="ValidationErrorElement" Template="{StaticResource ValidationErrorTemplate}" Visibility="Collapsed">
                  <ToolTipService.ToolTip>
                    <ToolTip x:Name="validationTooltip" Placement="Right" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                      <ToolTip.Triggers>
                        <EventTrigger RoutedEvent="Canvas.Loaded">
                          <BeginStoryboard>
                            <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                  <DiscreteObjectKeyFrame.Value>
                                    <sys:Boolean>True</sys:Boolean>
                                  </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                          </BeginStoryboard>
                        </EventTrigger>
                      </ToolTip.Triggers>
                    </ToolTip>
                  </ToolTipService.ToolTip>
                </ContentControl>
                <Border x:Name="IndeterminateState" Background="{StaticResource CheckBox.IndeterminateState.Border}" Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed" Opacity="0" />
                <Path x:Name="CheckIcon" Fill="#FF323232" Data="F1 M 135,156L 135,159L 139,163L 145,156L 145,153L 139,160L 135,156 Z " Style="{StaticResource CheckBoxIconTemplate}" Visibility="Collapsed" />
              </Grid>
              <ContentPresenter x:Name="ContentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Column="1" Grid.ColumnSpan="1" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ExpandCollapseCheckBoxStyle" TargetType="CheckBox">
    <Setter Property="Background" Value="{StaticResource ExpandCollapseCheckBox.DefaultState.Fill}"/>
    <Setter Property="Foreground" Value="{StaticResource ExpandCollapseCheckBox.HoverState.Fill}"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Top"/>
    <Setter Property="Padding" Value="4,1,0,0"/>
    <Setter Property="BorderThickness" Value="1"/>

    <Setter Property="BorderBrush">
      <Setter.Value>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
          <GradientStop Color="#FFA3AEB9" Offset="0"/>
          <GradientStop Color="#FF8399A9" Offset="0.375"/>
          <GradientStop Color="#FF718597" Offset="0.375"/>
          <GradientStop Color="#FF617584" Offset="1"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="CheckBox" >
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="17.03"/>
              <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver"/>
                <VisualState x:Name="Pressed"/>
                <VisualState x:Name="Disabled"/>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.2" To="90" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="Expander" />
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Expander" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="Expander"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Indeterminate"/>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused"/>
                <VisualState x:Name="Unfocused"/>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid"/>
                <VisualState x:Name="InvalidUnfocused"/>
                <VisualState x:Name="InvalidFocused"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path x:Name="Expander" Data="{StaticResource MetroIcon.Content.ArrowRight}" UseLayoutRounding="true" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" Height="10.4" VerticalAlignment="Center" Width="8.667" Stretch="Fill" StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeDashCap="Round" StrokeLineJoin="Round" Fill="{TemplateBinding Background}">
              <Path.RenderTransform>
                <CompositeTransform/>
              </Path.RenderTransform>
            </Path>
            <Border x:Name="ClickRectangle" Background="#00000000"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MetroCheckBoxStyleOnOffSwitch" TargetType="CheckBox">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="CheckBox">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
                  <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.15" To="Normal" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overlay">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed"/>
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.15" To="Checked">
                    <VisualTransition.GeneratedEasingFunction>
                      <CircleEase EasingMode="EaseIn" />
                    </VisualTransition.GeneratedEasingFunction>
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="X" Storyboard.TargetName="translate">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="26" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="on_back">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                        <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="30"/>
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition GeneratedDuration="0:0:0.15" To="Unchecked">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="X" Storyboard.TargetName="translate">
                        <EasingDoubleKeyFrame KeyTime="0" Value="26" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="on_back">
                        <EasingDoubleKeyFrame KeyTime="0" Value="30"/>
                        <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="X" Storyboard.TargetName="translate">
                      <EasingDoubleKeyFrame KeyTime="0" Value="26" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="on_back">
                      <EasingDoubleKeyFrame KeyTime="0" Value="30" />
                    </DoubleAnimationUsingKeyFrames>

                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked"/>
                <VisualState x:Name="Indeterminate" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Border x:Name="back" BorderThickness="1" BorderBrush="White"  Margin="1,0,1,0" Width="36" Height="12"  HorizontalAlignment="Center" VerticalAlignment="Center">
              <Grid>
                <Grid x:Name="off_Copy" >
                  <Rectangle x:Name="off_back" Fill="Gray" HorizontalAlignment="Stretch" />
                  <Rectangle x:Name="on_back" Width="0" Fill="{StaticResource Lite.Brush.Background.Dark}" HorizontalAlignment="Left"/>
                  <Rectangle x:Name="overlay" Fill="White" HorizontalAlignment="Stretch" Visibility="Collapsed" Opacity="0.15"/>
                </Grid>
              </Grid>
            </Border>

            <Grid x:Name="thumb" Width="12" HorizontalAlignment="Left" Height="12">
              <Border x:Name="on" Background="{StaticResource Lite.Brush.Background.Header}" />
              <Grid.RenderTransform>
                <TranslateTransform x:Name="translate" />
              </Grid.RenderTransform>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Name="MetroCheckBoxStyleDark"  TargetType="CheckBox">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="4,0,0,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="CheckBox">
          <Grid x:Name="Root" Background="Transparent" >
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="outer" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource MetroIcon.HoverState.Foreground.Dark}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="outer" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource MetroIcon.SelectedState.Foreground.Dark}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="inner" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource MetroIcon.SelectedState.Foreground.Dark}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource MetroIcon.SelectedState.Background.Dark}" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="outer" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource MetroIcon.DisabledState.Foreground.Dark}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="inner" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource MetroIcon.DisabledState.Foreground.Dark}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="outer" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource MetroIcon.SelectedState.Foreground.Dark}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="inner" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource MetroIcon.SelectedState.Foreground.Dark}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource MetroIcon.SelectedState.Background.Dark}" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked" />
                <VisualState x:Name="Indeterminate"/>

              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused"/>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderThickness="0" Background="#00000000" />
            <Grid x:Name="backgroundGrid" Visibility="Visible" Width="24" Height="24">
              <Path x:Name="outer" Data="{StaticResource MetroIcon.Content.Outline}" Stretch="Fill" Fill="{StaticResource MetroIcon.DefaultState.Foreground.Dark}"  Visibility="Visible" />
              <Path x:Name="fill" Data="{StaticResource MetroIcon.Content.Fill}" Stretch="Fill" Fill="{StaticResource MetroIcon.DefaultState.Background.Dark}" Visibility="Visible"/>
            </Grid>
            <Path x:Name="inner" Data="{TemplateBinding Content}" Stretch="Uniform" Fill="{StaticResource MetroIcon.DefaultState.Foreground.Dark}" Width="12" Height="12" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Name="MetroCheckBoxStyleLight"  TargetType="CheckBox">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="4,0,0,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="CheckBox">
          <Grid x:Name="Root" Background="Transparent" >
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="outer" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource MetroIcon.HoverState.Foreground.Light}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="outer" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource MetroIcon.SelectedState.Foreground.Light}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="inner" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource MetroIcon.SelectedState.Foreground.Light}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource MetroIcon.SelectedState.Background.Light}" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="outer" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource MetroIcon.DisabledState.Foreground.Light}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="inner" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource MetroIcon.DisabledState.Foreground.Light}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="outer" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource MetroIcon.SelectedState.Foreground.Light}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="inner" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource MetroIcon.SelectedState.Foreground.Light}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource MetroIcon.SelectedState.Background.Light}" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked" />
                <VisualState x:Name="Indeterminate"/>

              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused"/>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderThickness="0" Background="#00000000" />
            <Grid x:Name="backgroundGrid" Visibility="Visible" Width="24" Height="24">
              <Path x:Name="outer" Data="{StaticResource MetroIcon.Content.Outline}" Stretch="Fill" Fill="{StaticResource MetroIcon.DefaultState.Foreground.Light}"  Visibility="Visible" />
              <Path x:Name="fill" Data="{StaticResource MetroIcon.Content.Fill}" Stretch="Fill" Fill="{StaticResource MetroIcon.DefaultState.Background.Light}" Visibility="Visible"/>
            </Grid>
            <Path x:Name="inner" Data="{TemplateBinding Content}" Stretch="Uniform" Fill="{StaticResource MetroIcon.DefaultState.Foreground.Light}" Width="12" Height="12" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
</ResourceDictionary>